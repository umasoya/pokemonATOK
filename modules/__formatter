# vim: set ft=bash :

#
# For ATOK
# フォーマットして${BUFFER}に入れてく
#
__formatter::atok()
{
  __buffer::init

  # not bundle
  for _gen in ${!POKEMONS[@]}; do
    # write header
    __buffer::append ${HEADER}
    # write pokemons
    for _pokemon in $(echo ${POKEMONS[${_gen}]} | tr ' ' '\n'); do
      local _name=$(echo ${_pokemon} | __formatter::sjis)
      local _ruby=$(echo ${_pokemon} | __formatter::replace_specific_char | __formatter::hiragana | __formatter::sjis)
      local _class=$(echo ${CLASS} | __formatter::sjis)
      __buffer::append $(printf "%s\t%s\t%s*" ${_ruby} ${_name} ${_class})
    done
  done

  return 0
}

#
# For macOS IME
#
__formatter::mac_os()
{
  # to be written
  return 0
}

#
# For GoogleIME
#
__formatter::google_ime()
{
  # to be written
  return 0
}

#
# 文字コードをSJISに変換
#
# @param: string $_str
#
# @stdout: string
# @return: int
#
__formatter::sjis()
{
  if [ -p /dev/stdin ]; then
    local -r _str=$(cat -)
  else
    local -r _str=${@}
  fi
  echo "${_str}" | iconv -t sjis
  return 0
}

#
# 文字コードをUTF-8に変換
#
# @param: string $_str
#
# @stdout: string
# @return: int
#
__formatter::utf8()
{
  if [ -p /dev/stdin ]; then
    local -r _str=$(cat -)
  else
    local -r _str=${@}
  fi
  echo "${_str}" | iconv -t utf8
  return 0
}

__formatter::hiragana()
{
  if [ -p /dev/stdin ]; then
    local -r _str=$(cat -)
  else
    local -r _str=${@}
  fi
  echo "${_str}" | uconv -x hiragana
  return 0
}

#
# 雄雌マークなどの特殊な文字は個別に置換していく
#
__formatter::replace_specific_char()
{
  if [ -p /dev/stdin ]; then
    local -r _str=$(cat -)
  else
    local -r _str=${@}
  fi
  echo "${_str}" | sed \
    -e 's/♂/オス/g' \
    -e 's/♀/メス/g'

  return 0
}
